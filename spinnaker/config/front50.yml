server:
  port: 8080
  address: 0.0.0.0
redis:
  enabled: true
  connection: redis://redis:6379
  scheduler: default
  parallelism: -1

cassandra:
  enabled: false
  embedded: false
  host: cassandra
  keyspace: 'front50'
  cluster: 'Test Cluster'
  name: default

spinnaker:

  redis:
    enabled: true
    connection: redis://redis:6379
    scheduler: default
    parallelism: -1

  cassandra:
    enabled: false
    embedded: false
    cluster: 'Test Cluster'
    host: cassandra
    keyspace: 'front50'
    name: default


swagger:
  enabled: true
  title: Spinnaker Front50 API
  description:
  contact:
  patterns:
    - /default/.*
    - /credentials.*
    - /global/.*
    - /notifications.*
    - /pipelines.*
    - /strategies.*
    - /v2/.*


# server:
#   port: 8080
# #   address: ${services.front50.host:localhost}

# # hystrix:
# #   command:
# #     default.execution.isolation.thread.timeoutInMilliseconds: 15000
# #   threadpool:
# #     DefaultNotificationDAO:
# #       coreSize: 25
# #       maxQueueSize: 100
# #     DefaultPipelineDAO:
# #       coreSize: 25
# #       maxQueueSize: 100

# cassandra:
#   enabled: false
# #   embedded: ${services.cassandra.embedded:false}
# #   host: ${services.cassandra.host:localhost}

# aws:
#   simpleDBEnabled: false
# #   defaultSimpleDBDomain: ${providers.aws.defaultSimpleDBDomain}
# redis:
#   enabled: true
#   host: redis://redis
#   port: 6379
# spinnaker:
#   cassandra:
#     enabled: false
#     # host: ${services.cassandra.host:localhost}
#     # port: ${services.cassandra.port:9042}
#     # cluster: ${services.cassandra.cluster:CASS_SPINNAKER}
#     # keyspace: front50
#     # name: global

#   redis:
#     enabled: true
#     host: redis://redis
#     port: 6379
#   gcs:
#     enabled: false
#     # bucket: ${services.front50.storage_bucket:}
#     # # See https://cloud.google.com/storage/docs/managing-buckets#manage-class-location
#     # bucketLocation: ${services.front50.bucket_location:}
#     # rootFolder: ${services.front50.bucket_root:front50}
#     # project: ${services.front50.gcs.project}
#     # jsonPath: ${services.front50.gcs.jsonPath}

#   s3:
#     enabled: false
#     # bucket: ${services.front50.storage_bucket:}
#     # rootFolder: ${services.front50.bucket_root:front50}

#   azs:
#     enabled: false
#     # storageAccountName: ${services.front50.azs.storageAccountName}
#     # storageAccountKey: ${services.front50.azs.storageAccountKey}
#     # storageContainerName: ${services.front50.azs.storageContainerName:front50}

# # spectator:
# #   applicationName: ${spring.application.name}
# #   webEndpoint:
# #     enabled: ${services.spectator.webEndpoint.enabled:false}
# #     prototypeFilter:
# #       path: ${services.spectator.webEndpoint.prototypeFilter.path:}

# #   stackdriver:
# #     enabled: ${services.stackdriver.enabled}
# #     projectName: ${services.stackdriver.projectName}
# #     credentialsPath: ${services.stackdriver.credentialsPath}